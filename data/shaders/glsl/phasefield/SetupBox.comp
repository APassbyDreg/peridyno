#version 450
#extension GL_GOOGLE_include_directive : enable
#include "SharedDataInFluid.glsl"
#include "../rigidbody/SharedData.glsl"

layout(std430, binding = 0) buffer BoxOut {
	Box boxes[ ];
};

layout(std430, binding = 1) buffer DensityIn {
	float density[ ];
};

layout (binding = 2) uniform UBO {
	GridInfo gridInfo;
} params;

layout (push_constant) uniform PushConsts {
    uint gridSize;
} pushConsts;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID; 

	uint index = id.z * params.gridInfo.nx * params.gridInfo.ny + id.y * params.gridInfo.nx + id.x;
	if (index >= pushConsts.gridSize) 
		return;

    float h = params.gridInfo.spacing;
    float ox = params.gridInfo.ox;
    float oy = params.gridInfo.oy;
    float oz = params.gridInfo.oz;

    Box box;
    float w = density[index];// < 0.3 ? 0 : density[index];
    w = w < 0 ? 0 : w;
    box.halfLength = w * vec4(h, h, h, 0);
    box.center = vec4(ox, oy, oz, 0) + params.gridInfo.spacing * vec4(id.x, id.y, id.z, 0);
    box.rot = vec4(0, 0, 1, 0);

    boxes[index] = box;
}