#version 450
#extension GL_GOOGLE_include_directive : enable
#include "SharedDataInFluid.glsl"

layout(std430, binding = 0) buffer PressureOut {
	float pressure[ ];
};

layout(std430, binding = 1) buffer BufferIn {
	float buf[ ];
};

layout(std430, binding = 2) buffer RHSIn {
	float RHS[ ];
};

layout(std430, binding = 3) buffer CoefIn {
	Coefficent coefMatrix[ ];
};

layout (binding = 4) uniform UBO {
	Array3DInfo arrayInfo;
} params;


layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID;

    Array3DInfo aInfo = params.arrayInfo;
    uint i = id.x;
    uint j = id.y;
    uint k = id.z;
	if (!inside(i, j, k, aInfo)) 
		return;

    uint nx = aInfo.nx;
    uint ny = aInfo.ny;
    uint nz = aInfo.nz;
    uint nxy = aInfo.nxy;

    uint k0 = INDEX(i, j, k, aInfo);
    Coefficent A_ijk = coefMatrix[k0];
    
    float a = A_ijk.a;
    float x0 = A_ijk.x0;
    float x1 = A_ijk.x1;
    float y0 = A_ijk.y0;
    float y1 = A_ijk.y1;
    float z0 = A_ijk.z0;
    float z1 = A_ijk.z1;
//			pressure[k0] = 0.0f;
    float p_ijk = RHS[k0];

    if (i > 0) p_ijk += x0*buf[INDEX(i - 1, j, k, aInfo)];
    if (i < nx - 1) p_ijk += x1*buf[INDEX(i + 1, j, k, aInfo)];
    if (j > 0) p_ijk += y0*buf[INDEX(i, j - 1, k, aInfo)];
    if (j < ny - 1) p_ijk += y1*buf[INDEX(i, j + 1, k, aInfo)];
    if (k > 0) p_ijk += z0*buf[INDEX(i, j, k - 1, aInfo)];
    if (k < nz - 1) p_ijk += z1*buf[INDEX(i, j, k + 1, aInfo)];

    pressure[k0] = p_ijk / a;
}