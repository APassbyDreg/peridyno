#version 450
#extension GL_GOOGLE_include_directive : enable
#include "SharedDataInFluid.glsl"

layout(std430, binding = 0) buffer DensityOut {
	float dst[ ];
};

layout(std430, binding = 1) buffer DensityIn {
	float buf[ ];
};

layout(std430, binding = 2) buffer BufferIn {
	float src[ ];
};

layout (binding = 3) uniform UBO {
	Array3DInfo arrayInfo;
} params;

layout (push_constant) uniform PushConsts {
    float dt;
};

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID;

    Array3DInfo aInfo = params.arrayInfo;
    uint i = id.x;
    uint j = id.y;
    uint k = id.z;
	if (!inside(i, j, k, aInfo)) 
		return;

    uint nx = aInfo.nx;
    uint ny = aInfo.ny;
    uint nz = aInfo.nz;
    uint nxy = aInfo.nxy;

    float a = FLUID_ALPHA*dt/DEF_H/DEF_H;

    uint k0 = INDEX(i, j, k, aInfo);

    float rho_ijk = src[k0];
    float rho_i_minus = i == 0 ?  buf[k0] : buf[k0 - 1];
    float rho_i_plus = i == nx - 1 ? buf[k0] : buf[k0 + 1];

    float rho_j_minus = j == 0 ?  buf[k0] : buf[k0 - nx];
    float rho_j_plus = j == ny - 1 ? buf[k0] : buf[k0 + nx];

    float rho_k_minus = k == 0 ? buf[k0] : buf[k0 - nxy];
    float rho_k_plus = k == nz - 1 ? buf[k0] : buf[k0 + nxy];

    float ax0 = a;
    float ax1 = a;

    float ay0 = a;
    float ay1 = a;

    float az0 = a;
    float az1 = a;

    float c1 = 1.0f / (1.0f + ax0 + ax1 + ay0 + ay1 + az0 + az1);

    //dst[k0] = (c1*src[k0] + c2*(buf(i_plus, j, k) + buf(i_minus, j, k) + buf(i, j_plus, k) + buf(i, j_minus, k) + buf(i, j, k_plus) + buf(i, j, k_minus)));
    dst[k0] = (c1*rho_ijk + c1*ax1*rho_i_plus + c1*ax0*rho_i_minus + 
                            c1*ay1*rho_j_plus + c1*ay0*rho_j_minus + 
                            c1*az1*rho_k_plus + c1*az0*rho_k_minus);
}