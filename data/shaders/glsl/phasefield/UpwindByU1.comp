#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable
#include "SharedDataInFluid.glsl"

layout(std430, binding = 0) buffer DensityOut {
	float dst[ ];
};

layout(std430, binding = 1) buffer DensityIn {
	float src[ ];
};

layout(std430, binding = 2) buffer VelWIn {
	float vel_u[ ];
};

layout (binding = 3) uniform UBO {
	Array3DInfo arrayInfo;
} params;

layout (push_constant) uniform PushConsts {
    float dt;
};

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID;

    Array3DInfo aInfo = params.arrayInfo;
    uint i = id.x;
    uint j = id.y;
    uint k = id.z;
	if (!inside(i, j, k, aInfo)) 
		return;

    uint nx = aInfo.nx;
    uint ny = aInfo.ny;
    uint nz = aInfo.nz;
    uint nxy = aInfo.nxy;

    Array3DInfo aUInfo = params.arrayInfo;  aUInfo.nx = nx+1;   aUInfo.nxy = aUInfo.nx * aUInfo.ny;

    uint i_plus = clamp(i+1, 0, nx - 1);
    
    uint k0 = INDEX(i, j, k, aInfo);
    if (i < nx - 1)
    {
        uint k1 = INDEX(i_plus, j, k, aInfo);
        
        float vel = vel_u[INDEX(i + 1, j, k, aUInfo)];
        float dRho = vel > 0 ? src[k0] : src[k0+1];

        dst[k1] += vel*dt*max(dRho, 0)/DEF_H;
    }
}