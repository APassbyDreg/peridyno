#version 450
#extension GL_GOOGLE_include_directive : enable
#include "SharedData.glsl"

layout(std430, binding = 0) buffer VelocityOut {
	vec3 velocity[ ];
};

layout(std430, binding = 1) buffer AngularVelocityOut {
	vec3 angularVelocity[ ];
};

layout(std430, binding = 2) buffer AccelIn {
	vec3 accel[ ];
};

layout(std430, binding = 3) buffer MassInvIn {
	float massInv[ ];
};

layout(std430, binding = 4) buffer InertiaInvIn {
	mat3 inertiaInv[ ];
};

layout(std430, binding = 5) buffer BodyTypeIn {
	uint type[ ];
};

layout (binding = 6) uniform UBO {
	RigidBodySolverState state;
} params;

layout (local_size_x = 64) in;

layout (push_constant) uniform PushConsts {
	uint bodyCount;
} pushConsts;

void main() 
{
	uvec3 id = gl_GlobalInvocationID; 

	uint index = id.x;
	if (index >= pushConsts.bodyCount) 
		return;

    float dt = params.state.dt;

	if(type[index] == Dynamic) {
		velocity[index] += dt * (accel[2*index]);
		angularVelocity[index] += dt * accel[2*index+1];
	}
}