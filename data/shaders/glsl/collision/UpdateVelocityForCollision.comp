#version 450
#extension GL_GOOGLE_include_directive : enable
#include "../rigidbody/SharedData.glsl"
#include "../math/Quat.glsl"

layout(std430, binding = 0) buffer VelocityOut {
	vec3 velocity[ ];
};

layout(std430, binding = 1) buffer AngularVelocityOut {
	vec3 angularVelocity[ ];
};

layout(std430, binding = 2) buffer AccPosIn {
	vec3 accPos[ ];
};

layout(std430, binding = 3) buffer QuatIn {
	vec4 quat[ ];
};

layout(std430, binding = 4) buffer BodyTypeIn {
	uint type[ ];
};

layout (binding = 5) uniform UBO {
	RigidBodySolverState state;
} params;

layout (push_constant) uniform PushConsts {
	uint bodyCount;
} pushConsts;

layout (local_size_x = 64) in;

void main() 
{
	uvec3 id = gl_GlobalInvocationID; 

	uint index = id.x;
	if (index >= pushConsts.bodyCount) 
		return;

	if(type[index] <= Kinematic) return;

    float dt = params.state.dt;
	float erp = params.state.erp;

	float linearDamping = erp;
	velocity[index] += accPos[index] / dt;
}