#version 450
#extension GL_GOOGLE_include_directive : enable
#include "SharedDataInElasticBody.glsl"
#include "../math/Primitive3D.glsl"

layout(std430, binding = 0) buffer PositionInout {
	vec3 position[ ];
};

layout (binding = 1) uniform PlaneIn {
	Plane3D plane;
};

layout (push_constant) uniform PushConsts {
    uint vertexCount;
} pushConsts;

layout (local_size_x = 64) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID; 

	uint index = id.x;
	if (index >= pushConsts.vertexCount) 
		return;

    vec3 pos_i = position[index];
    vec3 diff = pos_i - plane.origin;

    float dist = dot(diff, plane.normal);
    vec3 cor_i = dist > 0 ? vec3(0) : -dist*plane.normal;

    position[index] += cor_i;
}