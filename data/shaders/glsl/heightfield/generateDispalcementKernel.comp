#version 450
#extension GL_GOOGLE_include_directive : enable
#include "../math/Quat.glsl"
#include "SharedDataHeightField.glsl"

#extension GL_EXT_debug_printf : enable

layout(std430, binding = 0) buffer HT {
	vec2 ht[ ];
};

layout(std430, binding = 1) buffer DXT {
	vec2 Dxt[ ];
};

layout(std430, binding = 2) buffer DZT {
	vec2 Dzt[ ];
};

layout (binding = 3) uniform UBO {
	Array2DInfo arrayInfo;
} params;

layout (local_size_x = 16, local_size_y = 16) in;
void main() 
{
	uvec3 id = gl_GlobalInvocationID; 
	uint x = id.x;
	uint y = id.y;
	
	Array2DInfo ArrayInfo = params.arrayInfo;
	uint index = INDEX(x, y, ArrayInfo);
	
	int width = int(ArrayInfo.nx);
	int height = width;
	int patchSize = width;
	
	float kx = (-width / 2.0 + x) * (2.0 * CUDART_PI_F / patchSize);
	float ky = (-height / 2.0 + y) * (2.0 * CUDART_PI_F / patchSize);
	float k_squared = kx * kx + ky * ky;
	
	if (k_squared == 0.0f)
	{
		k_squared = 1.0f;
	}
	
	kx = kx / sqrt(k_squared);
	ky = ky / sqrt(k_squared);
	
	if (!inside(x, y, ArrayInfo)) 
		return;
	
	vec2 ht_ij, idoth;
	
	ht_ij = ht[index];
	idoth = vec2(-ht_ij.y, ht_ij.x);

	Dxt[index] = kx*idoth;
	Dzt[index] = ky*idoth;
}